import React from 'react';
import { Button } from '../ui';

interface FormattingToolbarProps {
  onFormat: (command: string, value?: string) => void;
  onImageUpload: () => void;
  onInsertChecklist: () => void;
  onInsertTable: () => void;
}

export const FormattingToolbar: React.FC<FormattingToolbarProps> = ({
  onFormat,
  onImageUpload,
  onInsertChecklist,
  onInsertTable
}) => {
  // Format buttons data/–î–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–æ–∫ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const formatButtons = [
    { command: 'bold', icon: 'B', title: '–ñ–∏—Ä–Ω—ã–π (Ctrl+B)', shortcut: 'Ctrl+B' },
    { command: 'italic', icon: 'I', title: '–ö—É—Ä—Å–∏–≤ (Ctrl+I)', shortcut: 'Ctrl+I' },
    { command: 'underline', icon: 'U', title: '–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π (Ctrl+U)', shortcut: 'Ctrl+U' },
    { command: 'strikethrough', icon: 'S', title: '–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π', shortcut: '' }
  ];

  const listButtons = [
    { command: 'insertUnorderedList', icon: '‚Ä¢', title: '–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫' },
    { command: 'insertOrderedList', icon: '1.', title: '–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫' }
  ];

  const alignButtons = [
    { command: 'justifyLeft', icon: '‚ü®', title: '–ü–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é' },
    { command: 'justifyCenter', icon: '||', title: '–ü–æ —Ü–µ–Ω—Ç—Ä—É' },
    { command: 'justifyRight', icon: '‚ü©', title: '–ü–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é' }
  ];

  return (
    <div className="border-b border-default p-3 bg-surface">
      <div className="flex flex-wrap gap-2 items-center">
        {/* Text formatting/–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ */}
        <div className="flex gap-1 border-r border-default pr-2">
          {formatButtons.map(btn => (
            <button
              key={btn.command}
              onClick={() => onFormat(btn.command)}
              className="w-8 h-8 rounded bg-background hover:bg-primary hover:text-white transition-colors text-sm font-bold"
              title={btn.title}
            >
              {btn.icon}
            </button>
          ))}
        </div>

        {/* Headings/–ó–∞–≥–æ–ª–æ–≤–∫–∏ */}
        <div className="flex gap-1 border-r border-default pr-2">
          <select
            onChange={(e) => {
              const value = e.target.value;
              if (value) {
                onFormat('formatBlock', value);
                e.target.value = '';
              }
            }}
            className="text-sm bg-background border border-default rounded px-2 py-1"
          >
            <option value="">–ó–∞–≥–æ–ª–æ–≤–æ–∫</option>
            <option value="h1">–ó–∞–≥–æ–ª–æ–≤–æ–∫ 1</option>
            <option value="h2">–ó–∞–≥–æ–ª–æ–≤–æ–∫ 2</option>
            <option value="h3">–ó–∞–≥–æ–ª–æ–≤–æ–∫ 3</option>
            <option value="p">–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç</option>
          </select>
        </div>

        {/* Lists/–°–ø–∏—Å–∫–∏ */}
        <div className="flex gap-1 border-r border-default pr-2">
          {listButtons.map(btn => (
            <button
              key={btn.command}
              onClick={() => onFormat(btn.command)}
              className="w-8 h-8 rounded bg-background hover:bg-primary hover:text-white transition-colors text-sm"
              title={btn.title}
            >
              {btn.icon}
            </button>
          ))}
          <button
            onClick={onInsertChecklist}
            className="px-3 py-1 rounded bg-background hover:bg-success hover:text-white transition-colors text-sm"
            title="–ß–µ–∫-–ª–∏—Å—Ç –∑–∞–¥–∞—á"
          >
            ‚òê –ó–∞–¥–∞—á–∏
          </button>
        </div>

        {/* Alignment/–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ */}
        <div className="flex gap-1 border-r border-default pr-2">
          {alignButtons.map(btn => (
            <button
              key={btn.command}
              onClick={() => onFormat(btn.command)}
              className="w-8 h-8 rounded bg-background hover:bg-primary hover:text-white transition-colors text-sm"
              title={btn.title}
            >
              {btn.icon}
            </button>
          ))}
        </div>

        {/* Tables and special content/–¢–∞–±–ª–∏—Ü—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="flex gap-1 border-r border-default pr-2">
          <button
            onClick={onInsertTable}
            className="px-3 py-1 rounded bg-background hover:bg-accent hover:text-white transition-colors text-sm"
            title="–í—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É"
          >
            ‚öè –¢–∞–±–ª–∏—Ü–∞
          </button>
          <button
            onClick={() => onFormat('insertHorizontalRule')}
            className="px-3 py-1 rounded bg-background hover:bg-primary hover:text-white transition-colors text-sm"
            title="–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è"
          >
            ‚Äï
          </button>
        </div>

        {/* Links and media/–°—Å—ã–ª–∫–∏ –∏ –º–µ–¥–∏–∞ */}
        <div className="flex gap-1 border-r border-default pr-2">
          <button
            onClick={() => {
              const url = prompt('–í–≤–µ–¥–∏—Ç–µ URL —Å—Å—ã–ª–∫–∏:');
              if (url) {
                onFormat('createLink', url);
              }
            }}
            className="px-3 py-1 rounded bg-background hover:bg-primary hover:text-white transition-colors text-sm"
            title="–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É"
          >
            üîó
          </button>
          <Button
            size="sm"
            variant="outline"
            onClick={onImageUpload}
            title="–í—Å—Ç–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
          >
            üñºÔ∏è
          </Button>
        </div>

        {/* Clear formatting/–û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ */}
        <div className="flex gap-1 ml-auto">
          <button
            onClick={() => onFormat('removeFormat')}
            className="px-3 py-1 rounded bg-background hover:bg-warning hover:text-white transition-colors text-sm"
            title="–û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
          >
            –û—á–∏—Å—Ç–∏—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
};
