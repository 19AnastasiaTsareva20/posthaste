import React, { useState, useEffect } from 'react';
import { useParams, Link, useNavigate } from 'react-router-dom';
import { Button, Card } from '../components/ui';
import { useToast } from '../components/ui/NotificationSystem';
import { exportToMarkdown, exportToHTML, exportToJSON, exportToText, downloadFile } from '../utils/exportUtils';

interface Article {
  id: string;
  title: string;
  content: string;
  isPublic: boolean;
  tags: string[];
  createdAt: string;
  updatedAt: string;
}

export const ViewArticlePage: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  const toast = useToast();
  const [article, setArticle] = useState<Article | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (!id) {
      navigate('/articles');
      return;
    }

    const savedArticles = JSON.parse(localStorage.getItem('posthaste-articles') || '[]');
    const foundArticle = savedArticles.find((a: Article) => a.id === id);
    
    if (foundArticle) {
      setArticle(foundArticle);
    } else {
      toast.error('–°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', '–í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞');
      navigate('/articles');
    }
    
    setLoading(false);
  }, [id, navigate, toast]);

  // –§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å—Ç–∞—Ç—å–∏/Article export function
  const exportArticle = (format: 'markdown' | 'html' | 'json' | 'text') => {
    if (!article) return;

    const filename = `${article.title.replace(/[^a-zA-Z–∞-—è—ë–ê-–Ø–Å0-9]/g, '_')}_${article.id}`;
    const timestamp = new Date().toISOString().split('T')[0];

    switch (format) {
      case 'markdown':
        downloadFile(
          exportToMarkdown(article),
          `${filename}_${timestamp}.md`,
          'text/markdown'
        );
        toast.success('–≠–∫—Å–ø–æ—Ä—Ç –≤ Markdown', '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω');
        break;
      
      case 'html':
        downloadFile(
          exportToHTML(article),
          `${filename}_${timestamp}.html`,
          'text/html'
        );
        toast.success('–≠–∫—Å–ø–æ—Ä—Ç –≤ HTML', '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω');
        break;
      
      case 'json':
        downloadFile(
          exportToJSON(article),
          `${filename}_${timestamp}.json`,
          'application/json'
        );
        toast.success('–≠–∫—Å–ø–æ—Ä—Ç –≤ JSON', '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω');
        break;
      
      case 'text':
        downloadFile(
          exportToText(article),
          `${filename}_${timestamp}.txt`,
          'text/plain'
        );
        toast.success('–≠–∫—Å–ø–æ—Ä—Ç –≤ —Ç–µ–∫—Å—Ç', '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω');
        break;
    }
  };

  const deleteArticle = () => {
    if (!article) return;
    
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Å—Ç–∞—Ç—å—é?')) {
      const savedArticles = JSON.parse(localStorage.getItem('posthaste-articles') || '[]');
      const updatedArticles = savedArticles.filter((a: Article) => a.id !== article.id);
      localStorage.setItem('posthaste-articles', JSON.stringify(updatedArticles));
      
      toast.success('–°—Ç–∞—Ç—å—è —É–¥–∞–ª–µ–Ω–∞', '–°—Ç–∞—Ç—å—è –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
      navigate('/articles');
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-background dark:bg-dark-background flex items-center justify-center">
        <div className="text-center">
          <div className="text-4xl mb-4">‚è≥</div>
          <p className="text-text-secondary">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—å–∏...</p>
        </div>
      </div>
    );
  }

  if (!article) {
    return (
      <div className="min-h-screen bg-background dark:bg-dark-background flex items-center justify-center">
        <div className="text-center">
          <div className="text-4xl mb-4">‚ùå</div>
          <p className="text-text-secondary mb-4">–°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>
          <Link to="/articles">
            <Button>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Ç–∞—Ç—å—è–º</Button>
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background dark:bg-dark-background">
      {/* –•—ç–¥–µ—Ä/Header */}
      <header className="bg-gradient-header p-4 sticky top-0 z-10">
        <div className="flex justify-between items-center max-w-7xl mx-auto">
          <div className="flex items-center gap-4">
            <Link 
              to="/articles" 
              className="text-white/80 hover:text-white transition-colors"
            >
              ‚Üê –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç—å—è–º
            </Link>
            <div>
              <h1 className="text-2xl font-bold text-white truncate">
                {article.title}
              </h1>
              <p className="text-white/80 text-sm">
                {article.isPublic ? 'üåç –ü—É–±–ª–∏—á–Ω–∞—è' : 'üîí –ü—Ä–∏–≤–∞—Ç–Ω–∞—è'} ‚Ä¢ 
                –°–æ–∑–¥–∞–Ω–æ {new Date(article.createdAt).toLocaleDateString()}
              </p>
            </div>
          </div>
          
          <div className="flex gap-2">
            <Link to={`/create?edit=${article.id}`}>
              <Button
                className="bg-white/20 text-white hover:bg-white/30 border-white/30"
                size="sm"
              >
                ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            </Link>
            <Button
              onClick={deleteArticle}
              className="bg-red-500/20 text-white hover:bg-red-500/30 border-red-500/30"
              size="sm"
            >
              üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
            </Button>
          </div>
        </div>
      </header>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç/Main content */}
      <main className="container mx-auto p-6 max-w-7xl">
        <div className="grid lg:grid-cols-4 gap-6">
          {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏/Main article content */}
          <div className="lg:col-span-3">
            <Card>
              <article className="prose prose-lg max-w-none dark:prose-invert">
                <div 
                  dangerouslySetInnerHTML={{ __html: article.content }}
                  className="text-text-primary dark:text-dark-text-primary"
                />
              </article>
            </Card>
          </div>

          {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π/Sidebar with info */}
          <div className="space-y-6">
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—å–µ/Article info */}
            <Card>
              <h3 className="font-semibold text-text-primary dark:text-dark-text-primary mb-4">
                üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </h3>
              <div className="space-y-3 text-sm">
                <div>
                  <span className="text-text-secondary dark:text-dark-text-secondary">–°—Ç–∞—Ç—É—Å:</span>
                  <div className="mt-1">
                    <span className={`px-2 py-1 rounded-full text-xs ${
                      article.isPublic 
                        ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
                        : 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200'
                    }`}>
                      {article.isPublic ? 'üåç –ü—É–±–ª–∏—á–Ω–∞—è' : 'üîí –ü—Ä–∏–≤–∞—Ç–Ω–∞—è'}
                    </span>
                  </div>
                </div>
                
                <div>
                  <span className="text-text-secondary dark:text-dark-text-secondary">–°–æ–∑–¥–∞–Ω–æ:</span>
                  <div className="font-mono text-xs mt-1">
                    {new Date(article.createdAt).toLocaleString()}
                  </div>
                </div>
                
                {article.updatedAt !== article.createdAt && (
                  <div>
                    <span className="text-text-secondary dark:text-dark-text-secondary">–û–±–Ω–æ–≤–ª–µ–Ω–æ:</span>
                    <div className="font-mono text-xs mt-1">
                      {new Date(article.updatedAt).toLocaleString()}
                    </div>
                  </div>
                )}
                
                <div>
                  <span className="text-text-secondary dark:text-dark-text-secondary">ID:</span>
                  <div className="font-mono text-xs mt-1 break-all">
                    {article.id}
                  </div>
                </div>
              </div>
            </Card>

            {/* –¢–µ–≥–∏/Tags */}
            {article.tags.length > 0 && (
              <Card>
                <h3 className="font-semibold text-text-primary dark:text-dark-text-primary mb-4">
                  üè∑Ô∏è –¢–µ–≥–∏
                </h3>
                <div className="flex gap-2 flex-wrap">
                  {article.tags.map(tag => (
                    <span
                      key={tag}
                      className="px-3 py-1 bg-primary/10 text-primary rounded-full text-sm"
                    >
                      #{tag}
                    </span>
                  ))}
                </div>
              </Card>
            )}

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞/Statistics */}
            <Card>
              <h3 className="font-semibold text-text-primary dark:text-dark-text-primary mb-4">
                üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
              </h3>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span>–°–∏–º–≤–æ–ª–æ–≤:</span>
                  <span className="font-mono">
                    {article.content.replace(/<[^>]*>/g, '').length}
                  </span>
                </div>
                <div className="flex justify-between">
                  <span>–°–ª–æ–≤:</span>
                  <span className="font-mono">
                    {article.content.replace(/<[^>]*>/g, '').split(/\s+/).filter(word => word.length > 0).length}
                  </span>
                </div>
                <div className="flex justify-between">
                  <span>–¢–µ–≥–æ–≤:</span>
                  <span className="font-mono">{article.tags.length}</span>
                </div>
              </div>
            </Card>
          </div>
        </div>

        {/* –î–µ–π—Å—Ç–≤–∏—è/Actions */}
        <Card className="mt-6">
          <h3 className="font-semibold text-text-primary dark:text-dark-text-primary mb-4">
            –î–µ–π—Å—Ç–≤–∏—è
          </h3>
          <div className="space-y-4">
            {/* –≠–∫—Å–ø–æ—Ä—Ç/Export */}
            <div>
              <h4 className="text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">
                üì§ –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç—å–∏
              </h4>
              <div className="flex gap-2 flex-wrap">
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => exportArticle('markdown')}
                >
                  üìù Markdown
                </Button>
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => exportArticle('html')}
                >
                  üåê HTML
                </Button>
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => exportArticle('json')}
                >
                  üîß JSON
                </Button>
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => exportArticle('text')}
                >
                  üìÑ –¢–µ–∫—Å—Ç
                </Button>
              </div>
            </div>

            {/* –î—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è/Other actions */}
            <div>
              <h4 className="text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">
                ‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
              </h4>
              <div className="flex gap-2 flex-wrap">
                <Link to="/create">
                  <Button variant="outline" size="sm">
                    ‚úçÔ∏è –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é
                  </Button>
                </Link>
                <Link to="/articles">
                  <Button variant="outline" size="sm">
                    üìö –í—Å–µ –º–æ–∏ —Å—Ç–∞—Ç—å–∏
                  </Button>
                </Link>
                <Button 
                  variant="outline"
                  size="sm"
                  onClick={() => window.print()}
                >
                  üñ®Ô∏è –ü–µ—á–∞—Ç—å
                </Button>
              </div>
            </div>
          </div>
        </Card>
      </main>
    </div>
  );
};
